/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class vtWindow : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal vtWindow(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(vtWindow obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~vtWindow() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        csWindowPINVOKE.delete_vtWindow(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public vtWindow() : this(csWindowPINVOKE.new_vtWindow(), true) {
  }

  public int CreateAsChild(SWIGTYPE_p_long parent) {
    int ret = csWindowPINVOKE.vtWindow_CreateAsChild(swigCPtr, SWIGTYPE_p_long.getCPtr(parent));
    return ret;
  }

  public int Run() {
    int ret = csWindowPINVOKE.vtWindow_Run(swigCPtr);
    return ret;
  }

  public int Init() {
    int ret = csWindowPINVOKE.vtWindow_Init(swigCPtr);
    return ret;
  }

  public void Destroy() {
    csWindowPINVOKE.vtWindow_Destroy(swigCPtr);
  }

  public int Tick() {
    int ret = csWindowPINVOKE.vtWindow_Tick(swigCPtr);
    return ret;
  }

  public int Show(int ShowFlags) {
    int ret = csWindowPINVOKE.vtWindow_Show(swigCPtr, ShowFlags);
    return ret;
  }

  public int GetWidth() {
    int ret = csWindowPINVOKE.vtWindow_GetWidth(swigCPtr);
    return ret;
  }

  public int GetHeight() {
    int ret = csWindowPINVOKE.vtWindow_GetHeight(swigCPtr);
    return ret;
  }

  public int UpdateRenderSize(int w, int h) {
    int ret = csWindowPINVOKE.vtWindow_UpdateRenderSize(swigCPtr, w, h);
    return ret;
  }

  public int SendMessage(string targetObject, string message, int id0, int id1, int id2, int value) {
    int ret = csWindowPINVOKE.vtWindow_SendMessage__SWIG_0(swigCPtr, targetObject, message, id0, id1, id2, value);
    return ret;
  }

  public int SendMessage(string targetObject, string message, int id0, int id1, int id2, float value) {
    int ret = csWindowPINVOKE.vtWindow_SendMessage__SWIG_1(swigCPtr, targetObject, message, id0, id1, id2, value);
    return ret;
  }

  public int SendMessage(string targetObject, string message, int id0, int id1, int id2, string value) {
    int ret = csWindowPINVOKE.vtWindow_SendMessage__SWIG_2(swigCPtr, targetObject, message, id0, id1, id2, value);
    return ret;
  }

}
