#ifndef __vtNetEnumerations_h
#define __vtNetEnumerations_h

#define xBIT(x) (1 << (x))                       ///< Returns value with bit x set (2^x)


typedef enum E_DV_STATE
{

	E_DV_OK,
	E_DV_UPDATED
};
enum SuperType
{
	vtSTRING = 1,
	vtFLOAT = 2,
	vtINTEGER = 3,
	vtVECTOR = 4,
	vtVECTOR2D = 5,
	vtCOLOUR = 6,
	vtMATRIX = 7,
	vtQUATERNION = 8,
	vtRECTANGLE		= 9,
	vtBOX		= 10,
	vtBOOL		= 11,
	vtENUMERATION = 12,
	vtFLAGS = 13,
	vtFile = 14,
	vtOBJECT = 16,
	vtUNKNOWN = 17
};

typedef enum E_DO_FLAGS
{
	E_DO_OK=0x0000,
	E_DO_NEEDS_SEND=0x0001,
};


typedef enum E_DP_FLAGS
{
	E_DP_OK=0x0000,
	E_DP_NEEDS_SEND=0x0001,
};

typedef enum E_DO_UPDATE_FLAGS
{
	E_DO_NONE=0x0000,
	E_DO_POSITION=0x0001,
	E_DO_ROTATION=0x0002,
};



typedef enum E_DO_INTERFACE_FLAGS
{
	E_DO_CREATED=0x0001,
	E_DO_PROCESSED=0x0002,
	E_DO_BINDED=0x0004
};



typedef enum E_XNETWORK_INTERFACE_STATUS
{

	E_NI_CREATED,
	E_NI_CONNECTING,
	E_NI_CONNECTED,
	E_NI_ERROR
};

enum E_DO_DELETE_STATE
{
	E_DO_DS_DELETED,
	E_DO_DS_DELETE_NOTIFIED,

};

enum USER_FLAG
{
	USER_NEW,
	USER_OK,
	USER_DELETED,
	USERNAME_CHANGED,
	USERNAME_OK
};

/*enum USERNAME_FLAG
{
	USERNAME_CHANGED,
	USERNAME_OK
};*/


typedef enum E_DO_OWNERSHIP_STATUS
{
	E_DO_OS_OWNER,
	E_DO_OS_REQUEST,
	E_DO_OS_OTHER,
	E_DO_OS_BIND,
	E_DO_OS_RELEASED
};

typedef enum E_DO_OWNERSHIP_REQUEST
{

	E_DO_OSR_PROGRESS,
	E_DO_OSR_FAILED,
	E_DO_OSR_ACCEPTED
};

typedef enum E_DO_CREATION_FLAGS
{

	E_DO_CREATION_NONE,
	E_DO_CREATION_INCOMPLETE,
	E_DO_PENDING_ID_REQUESTED,
	E_DO_CREATION_CREATED,
	E_DO_CREATION_COMPLETE,
	E_DO_CREATION_TIMEOUT,
	E_DO_CREATION_ERROR
};


typedef enum E_PREDICTION_TYPE
{

	E_PTYPE_PREDICTED,
	E_PTYPE_RELIABLE,
	E_PTYPE_NON_RELIABLE
};




typedef enum E_DC_BASE_TYPE
{

	E_DC_BTYPE_3D_ENTITY,
	E_DC_BTYPE_2D_ENTITY,
	E_DC_BTYPE_CLIENT,
	E_DC_BTYPE_SESSION
};



typedef enum E_DC_PROPERTY_TYPE
{

	E_DC_PTYPE_3DVECTOR,
	E_DC_PTYPE_QUATERNION,
	E_DC_PTYPE_2DVECTOR,
	E_DC_PTYPE_FLOAT,
	E_DC_PTYPE_INT,
	E_DC_PTYPE_BOOL,
	E_DC_PTYPE_STRING,
	E_DC_PTYPE_UNKNOWN,
};


/*
typedef enum E_DCI_3D_NATIVE_PROPERTIES
{
	E_DCI_3D_NP_LOCAL_POSITION,
	E_DCI_3D_NP_LOCAL_ROTATION,
	E_DCI_3D_NP_LOCAL_SCALE,
	E_DCI_3D_NP_WORLD_POSITION,
	E_DCI_3D_NP_WORLD_ROTATION,
	E_DCI_3D_NP_WORLD_SCALE,
	E_DCI_3D_NP_VISIBILITY,
	E_DCI_3D_NP_UNKNOWN
};*/


typedef enum E_DCF_3D_NATIVE_PROPERTIES
{
	E_DCF_3D_NP_LOCAL_POSITION=0x0001,
	E_DCF_3D_NP_LOCAL_ROTATION=0x0002,
	E_DCF_3D_NP_LOCAL_SCALE=0x0004,
	E_DCF_3D_NP_WORLD_POSITION=0x0008,
	E_DCF_3D_NP_WORLD_ROTATION=0x0010,
	E_DCF_3D_NP_WORLD_SCALE=0x0020,
	E_DCF_3D_NP_VISIBILITY=0x0040,
	E_DCF_3D_NP_USER_0=0x0080,
	E_DCF_3D_NP_USER_1=0x0100,
	E_DCF_3D_NP_USER_2=0x0200,
	E_DCF_3D_NP_USER_3=0x0400,
	E_DCF_3D_NP_USER_4=0x0800,

};


typedef enum E_DC_3D_NATIVE_PROPERTIES
{
	E_DC_3D_NP_LOCAL_POSITION=1,
	E_DC_3D_NP_LOCAL_ROTATION=2,
	E_DC_3D_NP_LOCAL_SCALE=3,
	E_DC_3D_NP_WORLD_POSITION=4,
	E_DC_3D_NP_WORLD_ROTATION=5,
	E_DC_3D_NP_WORLD_SCALE=6,
	E_DC_3D_NP_VISIBILITY=7,
	E_DC_3D_NP_USER=8
};
/*typedef enum E_DC_3D_NATIVE_PROPERTIES
{
	E_DC_3D_NP_LOCAL_POSITION=1,
	E_DC_3D_NP_LOCAL_ROTATION=2,
	E_DC_3D_NP_LOCAL_SCALE=4,
	E_DC_3D_NP_WORLD_POSITION=8,
	E_DC_3D_NP_WORLD_ROTATION=16,
	E_DC_3D_NP_WORLD_SCALE=32,
	E_DC_3D_NP_VISIBILITY=64,
	E_DC_3D_NP_USER=128
};*/

typedef enum E_DO_UPDATE_STATE
{
	E_DO_US_OK,
	E_DO_US_PENDING,
	E_DO_US_SEND,
};
typedef enum E_C_PACKET
{
	E_C_CLIENT_NONE=0x000,
	E_C_CLIENT_OBJECT_UPDATE=0x0001
};


#endif
