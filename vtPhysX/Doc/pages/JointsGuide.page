/*!
    <h5>Joints : </h5>
    Without joints or shapes, actors would be able to do little else but float through space. Joints provide a consistent way to connect two actors. They require that the two actors always move relative to each other. The specific way in which they limit movement is determined by the type of joint.
    Joints and contacts (see Collision Detection) are both called constraints because they constrain the motion of a body. The SDK only supports pairs of constraints. In other words, each joint or contact is between exactly two actors. One of these actors may be the implicit world actor, which represents the immovable global reference frame. To specify a joint between an actor and the world, pass NULL as one of the two actor pointers when you create the joint. The actor which is not NULL must be dynamic, as connecting two static actors, implicitly immobile, would be pointless.
    Joints are created by calling the NxScene::createJoint() method. This method uses a certain type of joint descriptor as a parameter that contains all the information needed to create the joint. NOTE: When working with the PPU there is a limitation on 65536 joints, of which only 4096 may be active at any given time.
    The simulation cost of a joint is determined by the degrees of freedom (DOFs) it removes from the system. A degree of freedom is a property of an object that can change, here referring to a component of the body's position or orientation. For example, a body has 3 linear degrees of freedom along the X, Y and Z axis, plus 3 angular degrees of freedom for its rotation around the X, Y and Z axis. (See Other Resources for more suggested reading on this topic.)
    The sections within the 'Joint' folders describe the different joint types and give the number of degrees of freedom they remove.
*/