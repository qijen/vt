<HTML xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><HEAD><TITLE>CallPythonEx</TITLE>
<META content="MSHTML 6.00.5730.11" name=GENERATOR>
<META content="3.04.15 [01-SEP-07]" name=HELP-GENERATOR-VERSION>
<META http-equiv=Content-Type content="text/html; charset=windows-1252"><LINK href="Office11.css" type=text/css rel=stylesheet><LINK REL="stylesheet" TYPE="text/css" HREF="ms-help://Hx/HxRuntime/HxLink.css"><LINK REL="stylesheet" TYPE="text/css" HREF="ms-help://Hx/HxRuntime/HxLinkDefault.css"><LINK REL="stylesheet" TYPE="text/css" HREF="ms-help://Hx/HxRuntime/HxLink.css"><LINK REL="stylesheet" TYPE="text/css" HREF="ms-help://Hx/HxRuntime/HxLinkDefault.css"></HEAD>
<BODY>
<H1>
<H1><FONT color=#004000>CallPyFunc</FONT></H1>
<P>
<HR>

<P></P>
<P></P>
<P><FONT size=2><IMG src="MS-Help:/../vtPython/behaviors/IMAGES_BEHAVIORS/other_images/VSL.gif" align=left border=0></FONT><A href="MS-Help:/../vtPython/behaviors/bb_cats.html"></A><FONT size=2><IMG src="MS-Help:/../vtPython/behaviors/IMAGES_BEHAVIORS/other_images/border1.gif" align=left>Call Python Func<BR>Version 0.6 - Günter Baumgart<BR>Categorized in&nbsp;</FONT><A href="MS-Help:/../vtPython/behaviors/3D%20Transformations/_Cat_3D%20Transformations.html"><U><FONT color=#810081 size=2>Python</FONT></U></A><FONT size=2> </FONT></P>
<H3>
<TABLE cellSpacing=1 cellPadding=1 width="75%" border=0>
<TBODY>
<TR>
<TD bgColor=#004000>
<P><STRONG><FONT face=Tahoma color=#ffffff>Description</FONT></STRONG></P></TD></TR></TBODY></TABLE></H3>
<H3><FONT face=Tahoma size=1>Apply to a <U>BEOBJECT</U>.</FONT></H3>
<H3>
<H3>
<H3>
<P><FONT face=Tahoma size=2>This is the safe version of "PyFuncEx". &nbsp;It covers a lot of user mistakes like wrong passed parameter types or it fails when Python couldn't </FONT></P></H3>
<H3><FONT face=Tahoma><FONT size=2>execute your script.</FONT><FONT size=2>Internally it passes your parameter directly to the python function and&nbsp;also checks the parameter inputs for the right type, allowed are </FONT></FONT></H3>
<H3><FONT size=2><FONT face=Tahoma>Integer,String,Float and Bool.</FONT> </FONT></H3></H3></H3>
<P>
<TABLE cellSpacing=1 cellPadding=1 width="75%" border=0>
<TBODY>
<TR>
<TD bgColor=#004000>
<P><STRONG><FONT face=Tahoma color=#ffffff>Technical Information</FONT></STRONG></P></TD></TR></TBODY></TABLE><BR><IMG alt="" hspace=0 src="images/CallPythonFuncEx.png" align=baseline border=0></P>
<P><FONT face=Tahoma><FONT size=2><SPAN class=in><FONT color=#ff0000>In</FONT>: </SPAN>triggers the process.<BR><SPAN class=out><FONT color=#800000>Out</FONT>: </SPAN>is activated when the process is completed.<BR><BR><SPAN class=pin><FONT color=#0080ff>File</FONT>: </SPAN>specify you python script here. Don't add the "py" extension. Just use the filename.&nbsp;This parameter is not well catched&nbsp;&nbsp;yet. At the moment you have to place your Python script in the same directory like your cmo or </FONT></FONT></P>
<P><FONT face=Tahoma size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; within the Python&nbsp;directory : </FONT></P>
<P><FONT face=Tahoma size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - YourPythonDirectory\lib\site-packages</FONT></P>
<P><SPAN class=pin><FONT face=Tahoma><FONT size=2><FONT color=#0080ff>Func: </FONT><FONT color=#000000>Here you specify the name of your Python function. In the case you have a main function in the script then let it free. It executes the whole file then.</FONT></FONT></FONT></SPAN></P><SPAN class=pin>
<P><SPAN class=pin><FONT face=Tahoma><FONT size=2><FONT color=#0080ff>Reload: </FONT><FONT color=#000000>On trrigger the building block reloads the python script. This is usefull when you change the script during the development.</FONT></FONT></FONT></SPAN></P><SPAN class=pin>
<P><SPAN class=pin><FONT face=Tahoma><FONT size=2><FONT color=#0080ff>Added Parameter Inputs : </FONT><FONT color=#000000>Here you specify the arguments you want to pass to your Python function.Allowed are Integer,String, Float or Bool.</FONT></FONT></FONT></SPAN></P><SPAN class=pin>
<P><SPAN class=pin><FONT face=Tahoma><FONT size=2><FONT color=#0080ff>Added Parameter Outputs: </FONT><FONT color=#000000>This is the output from your Python script.Allowed are Integer,String, Float or Bool.</FONT></FONT></FONT></SPAN></P>
<P><SPAN class=pin><FONT size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Some Python functions returning a type called "Tuple". This type is supported and converted to a comma seperated string. </FONT></SPAN></P>
<P><SPAN class=pin><FONT face=Tahoma size=2></FONT></SPAN>&nbsp;</P><SPAN class=pin>
<P>
<TABLE cellSpacing=1 cellPadding=1 width="75%" border=0>
<TBODY>
<TR>
<TD bgColor=#004000>
<P><STRONG><FONT face=Tahoma color=#ffffff>Sample</FONT></STRONG></P></TD></TR></TBODY></TABLE></P>
<P><FONT size=2><STRONG>Consider the following simple Python script :</STRONG></FONT> </P>
<P><FONT face=Consolas color=#000080 size=2><STRONG>def multiply(a,b):<BR>&nbsp;&nbsp;&nbsp; c = 0<BR>&nbsp;&nbsp;&nbsp; for i in range(0, a):<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = c + b<BR>&nbsp;&nbsp;&nbsp; return c</STRONG></FONT></P>
<P><FONT color=#008000 size=2><FONT face=Tahoma color=#000000>You have to create two parameter inputs of the type "Integer".&nbsp;The building block creates two python objects in order to pass them to the function directly. How you see, the</FONT></FONT></P>
<P><FONT face=Tahoma size=2>function returns a value. You also have to create this parameter output of the right type by hand. The building block informs you on the log console when the type was not correct.</FONT></P>
<P><IMG alt="" hspace=0 src="file:///F:/Dokumente%20und%20Einstellungen/mc007/Desktop/pyMul.jpg" align=baseline border=0></P>
<P>&nbsp;</P></SPAN></SPAN></SPAN></SPAN></H1></BODY></HTML>
